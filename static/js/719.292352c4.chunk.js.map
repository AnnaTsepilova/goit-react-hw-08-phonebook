{"version":3,"file":"static/js/719.292352c4.chunk.js","mappings":"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","sources":["components/Footer/Footer.styled.jsx","pages/Contacts/Contacts.styled.jsx","components/SideBar/SideBar.styled.jsx","redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/SideBar/SideBar.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactItem/ContactItem.styled.jsx","components/ContactsList/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactsBook/ContactsBook.styled.jsx","components/ContactsBook/ContactsBook.jsx","components/Footer/Footer.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { BsGithub } from 'react-icons/bs';\n\nexport const FooterContainer = styled.footer`\n  width: 100%;\n  min-height: 64px;\n  //border-top: 1px solid #1976d2;\n  background-color: rgba(32, 32, 37, 0.075);\n`;\n\nexport const FooterDataWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 0;\n\n  width: 100%;\n`;\nexport const FooterDataText = styled.p`\n  margin-right: 10px;\n  font: inherit;\n  font-size: 16px;\n  font-weight: 400;\n  letter-spacing: 0.03em;\n\n  text-align: center;\n`;\n\nexport const GithubLogo = styled(BsGithub)`\n  margin-left: 2px;\n  color: #9c27b0;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n\n  vertical-align: middle;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    box-shadow: 0 0 13px 3px #9c27b0;\n    transform: scale(1.3);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const PhonePageWrapper = styled.div`\n  min-height: 100vh;\n  min-width: 320px;\n  width: 100%;\n\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n\nexport const MainContainer = styled.main`\n  display: flex;\n  //margin-top: 1px;\n`;\n\nexport const PhonebookContainer = styled.main`\n  min-height: 100vh;\n  //display: flex;\n  width: 100%;\n\n  /* background-color: #fcfcfc; */\n  /* \n  box-shadow: ${props => props.theme.shadows.boxShadow};\n  border-radius: 8px; */\n`;\n","import styled from 'styled-components';\n\nexport const SideBarWrapper = styled.div`\n  padding-top: 20px;\n  padding-left: 40px;\n\n  width: 400px;\n\n  background-color: #fff;\n  outline: 0;\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nimport TextField from '@mui/material/TextField';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\n\nexport const FormContainer = styled.form`\n  padding: 0 20px 25px 20px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  font-size: 16px;\n`;\n\nexport const ContactInput = styled(TextField)`\n  display: block;\n  margin-bottom: 50px;\n  padding: 15px 20px;\n  font-size: 20px;\n  width: 280px;\n\n  border: 1px solid #21212133;\n  border-radius: 4px;\n  outline: transparent;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  color: ${props => props.theme.colors.secondary};\n\n  &:focus {\n    border: 1px solid ${props => props.theme.colors.accentColor};\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-top: 16px;\n  padding: 10px;\n  min-width: 45px;\n  width: 280px;\n  height: 40px;\n\n  text-align: center;\n  border-radius: 4px;\n  border-width: 0;\n  color: ${props => props.theme.colors.background};\n  background-color: #3f9eec;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n\n  cursor: pointer;\n  outline: rgba(0, 0, 0, 0);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #eef7ff;\n    color: ${props => props.theme.colors.accentColor};\n  }\n`;\n\nexport const ContactAddIcon = styled(PersonAddAlt1Icon)`\n  margin-left: 10px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport {\n  FormContainer,\n  ContactInput,\n  Button,\n  ContactAddIcon,\n} from 'components/ContactForm/ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const nameInputId = nanoid();\n  const telInputId = nanoid();\n\n  const handleNameChange = event => {\n    setName(event.currentTarget.value);\n  };\n  const handleNumberChange = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let isContactName = items.filter(item =>\n      item.name.toLowerCase().includes(event.target.name.value.toLowerCase())\n    );\n    let isContactNumber = items.filter(item =>\n      item.number\n        .toLowerCase()\n        .includes(event.target.number.value.toLowerCase())\n    );\n\n    if (isContactName.length) {\n      Notify.warning(\n        `Name ${event.target.name.value} is already in your contacts`,\n        {\n          background: '#eebf31',\n          fontSize: '16px',\n          width: '350px',\n        }\n      );\n      return;\n    }\n\n    if (isContactNumber.length) {\n      Notify.warning(\n        `Number ${event.target.number.value} is already in your contacts`,\n        {\n          background: '#eebf31',\n          fontSize: '16px',\n          width: '350px',\n        }\n      );\n      return;\n    }\n    dispatch(\n      addContact({\n        name: event.target.name.value,\n        number: event.target.number.value,\n      })\n    );\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <ContactInput\n        margin=\"normal\"\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleNameChange}\n        id={nameInputId}\n      />\n\n      <ContactInput\n        margin=\"normal\"\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleNumberChange}\n        id={telInputId}\n      />\n      <Button type=\"submit\">\n        Add contact\n        <ContactAddIcon />\n      </Button>\n    </FormContainer>\n  );\n}\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import { SideBarWrapper } from 'components/SideBar/SideBar.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nexport default function SideBar() {\n  return (\n    <SideBarWrapper>\n      <ContactForm />\n    </SideBarWrapper>\n  );\n}\n","import styled from 'styled-components';\nimport TextField from '@mui/material/TextField';\n\nimport { Label } from 'components/ContactForm/ContactForm.styled';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 35px;\n  width: 100%;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const FilterContactInput = styled(TextField)`\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  background-color: #fff;\n`;\n\nexport const FilterLabel = styled(Label)`\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  FilterContainer,\n  FilterContactInput,\n} from 'components/Filter/Filter.styled';\n\nexport default function Filter({ searchQuery, filterByName }) {\n  return (\n    <FilterContainer>\n      <FilterContactInput\n        label=\"Find contacts by name\"\n        type=\"text\"\n        value={searchQuery}\n        onChange={event => filterByName(event.target.value)}\n      />\n    </FilterContainer>\n  );\n}\n\nFilter.propTypes = {\n  filterByName: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string,\n};\n","import Avatar from '@mui/material/Avatar';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport styled from 'styled-components';\n\nimport { Button } from 'components/ContactForm/ContactForm.styled';\n\nexport const ContactCard = styled.div`\n  position: relative;\n  height: 270px;\n  justify-content: center;\n  text-align: center;\n  padding: 25px;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n    0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: 0px 0px 4px 2px rgb(63, 158, 236);\n  }\n`;\n\nexport const ContactRow = styled.li`\n  width: 100%;\n  margin-right: ${props => props.theme.space[5]}px;\n  margin-bottom: 20px;\n  margin-left: 20px;\n`;\n\nexport const Name = styled.h3`\n  margin-bottom: ${props => props.theme.space[5]}px;\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const Phone = styled.p`\n  margin-bottom: 20px;\n  font-size: 20px;\n  color: #212121b9;\n`;\n\nexport const ContactAvatar = styled(Avatar)`\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ButtonGroup = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 25px;\n\n  margin-top: 25px;\n`;\n\nexport const DeleteButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 45px;\n  height: 45px;\n  border-radius: 4px;\n  background-color: #ef5350;\n\n  /* color: ${props => props.theme.colors.background};\n  background-color: #eebf31; */\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 5px -1px,\n    rgb(0 0 0 / 14%) 0px 6px 10px 0px, rgb(0 0 0 / 12%) 0px 1px 18px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #ef5350;\n  }\n`;\n\nexport const IconDelete = styled(DeleteIcon)`\n  font-size: 20px;\n`;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\nimport {\n  ContactRow,\n  Name,\n  Phone,\n  ContactCard,\n  ContactAvatar,\n  ButtonGroup,\n  DeleteButton,\n  IconDelete,\n} from 'components/ContactsList/ContactItem/ContactItem.styled';\n\nexport default function ContactItem({ contact }) {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    Notify.success('Contact is deleted', {\n      fontSize: '16px',\n      width: '350px',\n    });\n    dispatch(deleteContact(contact.id));\n  };\n\n  //-=-=-=-=-=-=-=-=- Letter Avatar -=-=-=-=-=-=-=-=-=-\n\n  function stringToColor(string) {\n    let hash = 0;\n    let i;\n\n    /* eslint-disable no-bitwise */\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = '#';\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n    /* eslint-enable no-bitwise */\n\n    return color;\n  }\n\n  function stringAvatar(name) {\n    let nameArr = name.split(' ');\n    let firstName = nameArr[0][0];\n    let lastName = nameArr[1] ? nameArr[1][0] : nameArr[0][1];\n\n    return {\n      sx: {\n        bgcolor: stringToColor(name),\n        width: 60,\n        height: 60,\n        fontSize: 26,\n      },\n      children: `${firstName}${lastName}`,\n    };\n  }\n\n  //-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\n  return (\n    <ContactRow>\n      <ContactCard>\n        <ContactAvatar {...stringAvatar(contact.name)} alt={contact.name} />\n        <Name>{contact.name}</Name>\n        <Phone>{contact.number}</Phone>\n        <ButtonGroup>\n          <DeleteButton type=\"button\" onClick={handleDelete}>\n            <IconDelete />\n          </DeleteButton>\n        </ButtonGroup>\n      </ContactCard>\n    </ContactRow>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsListContainer = styled.ul`\n  display: grid;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 30px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-bottom: 60px;\n\n  list-style: none;\n`;\n\nexport const Text = styled.p`\n  width: 400px;\n  margin-right: auto;\n  margin-left: auto;\n\n  font-size: 20px;\n`;\n","import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectContacts } from 'redux/selectors';\n\nimport ContactItem from 'components/ContactsList/ContactItem/ContactItem';\nimport {\n  ContactsListContainer,\n  Text,\n} from 'components/ContactsList/ContactsList.styled';\n\nconst getVisibleContacts = (items, searchQuery) => {\n  return items.filter(item =>\n    item.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n};\n\nexport default function ContactsList() {\n  const items = useSelector(selectContacts);\n  const filter = useSelector(state => state.filter);\n\n  const visibleContacts = getVisibleContacts(items, filter.filter);\n\n  return (\n    <ContactsListContainer>\n      {visibleContacts.length ? (\n        visibleContacts.map(item => {\n          return <ContactItem key={item.id} contact={item} />;\n        })\n      ) : (\n        <Text>There is no contact in your phonebook</Text>\n      )}\n    </ContactsListContainer>\n  );\n}\n\nContactsList.propTypes = {\n  searchQuery: PropTypes.string,\n  items: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const ContactsBookWrapper = styled.div`\n  width: 100%;\n  max-width: 1440px;\n  //margin-top: 58px;\n\n  /* background-color: #fcfcfc; */\n  /* \n  box-shadow: ${props => props.theme.shadows.boxShadow};\n  border-radius: 8px; */\n`;\n\nexport const SubTitle = styled.h2`\n  padding: 32px 20px;\n  font-size: ${props => props.theme.fontSizes.l}px;\n  font-weight: ${props => props.theme.fontWeights.bold};\n  color: ${props => props.theme.colors.primary};\n  text-align: center;\n`;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport {\n  ContactsBookWrapper,\n  SubTitle,\n} from 'components/ContactsBook/ContactsBook.styled';\n\n//-=-=-=-REDUX-=-=-=-\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { setFilterContact } from 'redux/filterSlice';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\n//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\nexport default function ContactsBook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsBookWrapper>\n      <SubTitle>Contacts</SubTitle>\n      <Filter filterByName={payload => dispatch(setFilterContact(payload))} />\n      {isLoading && !error ? <Loader /> : <ContactsList />}\n    </ContactsBookWrapper>\n  );\n}\n\nContactsBook.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  contactDeleteHandler: PropTypes.func,\n  formSubmitHandler: PropTypes.func,\n  handleFilter: PropTypes.func,\n  getFilteredContacts: PropTypes.func,\n};\n","import {\n  FooterContainer,\n  FooterDataWrapper,\n  FooterDataText,\n  GithubLogo,\n} from 'components/Footer/Footer.styled';\n\nexport default function Footer() {\n  return (\n    <FooterContainer>\n      <FooterDataWrapper>\n        <FooterDataText>Copyright © 2023 | Developed by</FooterDataText>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/AnnaTsepilova\"\n        >\n          <GithubLogo />\n        </a>\n      </FooterDataWrapper>\n    </FooterContainer>\n  );\n}\n","import {\n  PhonebookContainer,\n  MainContainer,\n} from 'pages/Contacts/Contacts.styled';\n\nimport SideBar from 'components/SideBar/SideBar';\nimport ContactsBook from 'components/ContactsBook/ContactsBook';\nimport Footer from 'components/Footer/Footer';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <PhonebookContainer>\n        <MainContainer>\n          <SideBar />\n          <ContactsBook />\n        </MainContainer>\n      </PhonebookContainer>\n      <Footer />\n    </>\n  );\n}\n"],"names":["FooterContainer","styled","FooterDataWrapper","FooterDataText","GithubLogo","BsGithub","MainContainer","PhonebookContainer","props","theme","shadows","boxShadow","SideBarWrapper","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","FormContainer","Label","space","ContactInput","TextField","colors","secondary","accentColor","Button","background","ContactAddIcon","PersonAddAlt1Icon","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","nameInputId","nanoid","telInputId","reset","onSubmit","event","preventDefault","isContactName","filter","item","toLowerCase","includes","target","value","isContactNumber","length","Notify","fontSize","width","addContact","margin","label","type","pattern","title","required","onChange","currentTarget","id","SideBar","FilterContainer","FilterContactInput","Filter","searchQuery","filterByName","ContactCard","ContactRow","Name","Phone","ContactAvatar","Avatar","ButtonGroup","DeleteButton","IconDelete","DeleteIcon","ContactItem","contact","stringToColor","string","i","hash","charCodeAt","color","toString","slice","nameArr","split","firstName","lastName","sx","bgcolor","height","children","stringAvatar","alt","onClick","deleteContact","ContactsListContainer","Text","ContactsList","visibleContacts","getVisibleContacts","map","ContactsBookWrapper","SubTitle","fontSizes","l","fontWeights","bold","primary","ContactsBook","useEffect","fetchContacts","payload","setFilterContact","Loader","Footer","rel","href","ContactsPage"],"sourceRoot":""}